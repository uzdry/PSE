IComponent diagram 2

@startuml 

abstract class  Message << serializable, Product >> {
}

class SensorValueMessage << ConcreteProduct >> {
	value: Value
}

class ConfigFileMessage << ConcreteProduct >> extends Message {
configFileRequest: ConfigFileRequest
}

class StatisticMessage << ConcreteProduct >> {
	statistic: Statistic
}

class DatabaseRequestMessage <<ConcreteProduct >> {
	dbRequest: DBRequest
}

class DashboardConfigMessage << ConcreteProduct >> {
	dashboardConfig: DashboardConfig
}

class DBRequest {
	-topic: Topic
	+getQuery(): Query
}

class DBReqRecent {
	-numberRecentEntries: int
}

class DBReqFrom {
	-startDate: Date
}

class DBReqRange {
	-startDate: Date
	-endDate: Date
}

Message <|-- SensorValueMessage
Message <|-- StatisticMessage
Message <|-- DashboardConfigMessage
Message <|-- DatabaseRequestMessage

DBRequest <|-- DBReqRecent
DBRequest <|-- DBReqFrom
DBRequest <|-- DBReqRange


abstract class BusAccess << Creator >> {
	+publish(message: Message)
	+handleMessage(message: Message)
	+subscribe(object: BusAccess, topic: Topic)
	+unsubscribe(object: BusAccess, topic: Topic)
	-createMessage()
}

class Broker {
	+getSubscriptions(topic: Topic)
	+getSubscriptions(object: BusAccess)
	+subscribe(object: BusAccess, topic: Topic)
	+unsubscribe(object: BusAccess, topic: Topic)
}

class Subscription {
	subscriber: BusAccess
	subscribedTopic: Topic
}

class MessageBus {
	+subscribe(object: BusAccess, topic: Topic)
	+unsubscribe(object: BusAccess, topic: Topic)
	+handleMessage(message: Message)
	-distribute(message: Message)
}

MessageBus *--"1" Broker
MessageBus o--"0..n" Message
MessageBus o--"0..n" BusAccess 
Broker *--"0..n" Subscription
BusAccess o--"0..n" Message

@enduml