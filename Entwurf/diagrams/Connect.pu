@startuml
activate Terminal
Terminal ->> Webserver: openWebpage()
activate Webserver

Terminal <-- Webserver: {css, JS, html}

ref over Terminal,Webserver

	For establishing WebRTC-Connection look in File ...

end ref


create ":Proxy"

Webserver --> ":Proxy": <<creates>>
deactivate Webserver

Terminal -> Terminal: searchForCookie()
activate Terminal
	Terminal -> Terminal: cookie or null
deactivate Terminal

Terminal --> ":Proxy": send(cookie)
activate ":Proxy"

alt signature not found
	":Proxy" -> ":Proxy": createRandomSignature()
	activate ":Proxy"
		":Proxy" -> ":Proxy": Signature
	deactivate ":Proxy"
	":Proxy" ->> Terminal: send(signature)
	Terminal -> Terminal: createCookie(signature)
end

activate ":Proxy"
	":Proxy" -> ":Proxy": createMessage(request, signature)
	activate ":Proxy"
		":Proxy" --> ":Proxy": message
	deactivate ":Proxy"
	":Proxy" -> Bus: subscribe(database)
	activate Bus
    	Bus -> ":Proxy"
    deactivate Bus
	":Proxy" ->> Bus: publish(message)
deactivate ":Proxy"

activate Bus
	Bus ->> Database: handleMessage(message)
deactivate Bus

activate Database
	Database -> Database: searchSignature(signature)
	activate Database
		Database --> Database: Config
	deactivate Database

	alt signature equals null
		Database -> Database: createDefaultConfig(signature)
		activate Database
			Database -> Database
		deactivate Database
		
	end
	Database -> Database: createMessage(answer, config)
	activate Database
		Database -> Database: message
	deactivate Database
	Database ->> Bus: publish(message)
deactivate Database	

activate Bus
	Bus ->> ":Proxy": handleMessage(message)
deactivate Bus


activate ":Proxy"

	":Proxy" -> ":Proxy": changeSubscriptions(signature)
	activate ":Proxy"
		":Proxy" --> ":Proxy"
		
	deactivate ":Proxy"


@enduml
