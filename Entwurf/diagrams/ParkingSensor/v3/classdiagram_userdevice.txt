@startuml

class ScreenManager {
+draw(parentNode : NodeComponent)
+erase()
}

class PathNode {

}

class ProximityDisplayNode {

}

abstract class BusAccess {

}

class PathRefresher {
}

class ProximityDisplayRefresher {
}

abstract class NodeComponent {
+parentNode : NodeComponent

+setAttribute(name, value)
}

class NodeComposite {
+childNodes : NodeComposite[]
+appendChild(newChild : NodeComponent)
+removeChild(child : NodeComponent)
}

interface Path {
getIterator() : PathIterator

}


abstract class NodeLeaf {
}


PathRefresher "1" *-- "1" Path
NodeComponent <|-- NodeComposite
NodeComponent "0..*" <-- NodeComposite

NodeComponent <|-- NodeLeaf

BusAccess <|-- PathRefresher
BusAccess <|-- ProximityDisplayRefresher

NodeLeaf <|-- PathNode
NodeLeaf <|--ProximityDisplayNode

PathNode "2" <-- "1" PathRefresher : refreshes
ProximityDisplayNode "1" <-- "1" ProximityDisplayRefresher : refreshes

PathRefresher <.. ScreenManager : "create/delete"
ProximityDisplayRefresher <.. ScreenManager : "create/delete"
@enduml
